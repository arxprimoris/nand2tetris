// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here.
	DMux8Way(in=load, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7, sel=address);
	Register(in=in, load=load0, out=register0);
	Register(in=in, load=load1, out=register1);
	Register(in=in, load=load2, out=register2);
	Register(in=in, load=load3, out=register3);
	Register(in=in, load=load4, out=register4);
	Register(in=in, load=load5, out=register5);
	Register(in=in, load=load6, out=register6);
	Register(in=in, load=load7, out=register7);
	Mux8Way16(a=register0, b=register1, c=register2, d=register3, e=register4, f=register5, g=register6, h=register7, sel=address, out=out);
}
